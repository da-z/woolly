<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>ing.llamaz.woolly</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Woolly</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="woolly.llamaz.ing@gmail.com" url="https://woolly.llamaz.ing">LLaMazing</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
        <p>Woolly is a simple Code Generation plugin that leverages Large Language Models (LLMs) to seamlessly generate,
            refactor, or simplify code.</p>

        <h3>Key Features:</h3>

        <ul>
            <li>
                <strong>Code Refactoring:</strong>
                <ul>
                    <li>The plugin excels in refactoring code to improve readability, maintainability, and overall code
                        quality.</li>
                    <li>It intelligently analyzes the provided code snippets and suggests optimized versions, eliminating
                        redundancies and enhancing efficiency.</li>
                </ul>
            </li>
            <li>
                <strong>Code Generation:</strong>
                <ul>
                    <li>Generate new code tailored to your specifications.</li>
                </ul>
            </li>
        </ul>

        <h3>Set-Up:</h3>

        <p>Go to <strong>Settings</strong> &gt; <strong>Other Settings</strong> &gt; <strong>Woolly Settings</strong> and configure the URL for the LLM you would like to use,
            the model, and optionally, your API key.</p>

        <p>If using Ollama, you need to pull a model (<a href="https://ollama.com/library" target="_blank">https://ollama.com/library</a>)
            before using it in the plugin.</p>

        <h3>Usage:</h3>

        <p>Select a piece of text, right-click, and choose the magic Woollify action. In its default form, the action will
            try to simplify/refactor the code. However, it can also generate code. You can instruct it via comments. Feel
            free to experiment.</p>

        <p>If you are not satisfied with the result, you can always Undo the changes.</p>

        <p>Have fun!</p>

    ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable instance="ing.llamaz.woolly.ui.Settings" displayName="Woolly Settings"/>
    </extensions>

    <actions>
        <action id="ing.llamaz.woolly.actions.WoollifyAction" class="ing.llamaz.woolly.actions.WoollifyAction"
                text="Woollify" description="Generates or refactors code using AI" icon="ing.llamaz.woolly.ui.Icons.Woolly">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </action>
    </actions>
</idea-plugin>
